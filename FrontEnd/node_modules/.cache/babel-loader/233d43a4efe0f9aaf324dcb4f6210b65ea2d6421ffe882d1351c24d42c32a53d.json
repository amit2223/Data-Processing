{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aj437\\\\Desktop\\\\Projects\\\\Centric\\\\my-app\\\\src\\\\GraphComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { LineChart, Line, XAxis, YAxis, Tooltip, Legend, CartesianGrid } from \"recharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://localhost:8080/api/data\"; // Adjust API URL if needed\n\nconst GraphComponent = ({\n  selectedMetric\n}) => {\n  _s();\n  const [graphData, setGraphData] = useState([]);\n  useEffect(() => {\n    fetch(`${API_URL}/graph?metric=${selectedMetric}`).then(res => res.json()).then(data => {\n      if (Array.isArray(data)) {\n        setGraphData(data);\n      } else {\n        console.error(\"Unexpected API response:\", data);\n        setGraphData([]);\n      }\n    }).catch(error => console.error(\"Error fetching graph data:\", error));\n  }, [selectedMetric]);\n  return /*#__PURE__*/_jsxDEV(LineChart, {\n    width: 800,\n    height: 400,\n    data: graphData,\n    children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n      strokeDasharray: \"3 3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n      dataKey: \"timestamp\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      type: \"monotone\",\n      dataKey: selectedMetric,\n      stroke: \"#8884d8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(GraphComponent, \"pmamvzrrixu6Uz+4Mr1ZIumSAC8=\");\n_c = GraphComponent;\nexport default GraphComponent;\nvar _c;\n$RefreshReg$(_c, \"GraphComponent\");","map":{"version":3,"names":["React","useEffect","useState","LineChart","Line","XAxis","YAxis","Tooltip","Legend","CartesianGrid","jsxDEV","_jsxDEV","API_URL","GraphComponent","selectedMetric","_s","graphData","setGraphData","fetch","then","res","json","data","Array","isArray","console","error","catch","width","height","children","strokeDasharray","fileName","_jsxFileName","lineNumber","columnNumber","dataKey","type","stroke","_c","$RefreshReg$"],"sources":["C:/Users/aj437/Desktop/Projects/Centric/my-app/src/GraphComponent.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { LineChart, Line, XAxis, YAxis, Tooltip, Legend, CartesianGrid } from \"recharts\";\n\nconst API_URL = \"http://localhost:8080/api/data\";  // Adjust API URL if needed\n\nconst GraphComponent = ({ selectedMetric }) => {\n  const [graphData, setGraphData] = useState([]);\n\n  useEffect(() => {\n    fetch(`${API_URL}/graph?metric=${selectedMetric}`)\n      .then((res) => res.json())\n      .then((data) => {\n        if (Array.isArray(data)) {\n          setGraphData(data);\n        } else {\n          console.error(\"Unexpected API response:\", data);\n          setGraphData([]);\n        }\n      })\n      .catch((error) => console.error(\"Error fetching graph data:\", error));\n  }, [selectedMetric]);\n\n  return (\n    <LineChart width={800} height={400} data={graphData}>\n      <CartesianGrid strokeDasharray=\"3 3\" />\n      <XAxis dataKey=\"timestamp\" />\n      <YAxis />\n      <Tooltip />\n      <Legend />\n      <Line type=\"monotone\" dataKey={selectedMetric} stroke=\"#8884d8\" />\n    </LineChart>\n  );\n};\n\nexport default GraphComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,EAAEC,aAAa,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzF,MAAMC,OAAO,GAAG,gCAAgC,CAAC,CAAE;;AAEnD,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACdiB,KAAK,CAAC,GAAGN,OAAO,iBAAiBE,cAAc,EAAE,CAAC,CAC/CK,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAK;MACd,IAAIC,KAAK,CAACC,OAAO,CAACF,IAAI,CAAC,EAAE;QACvBL,YAAY,CAACK,IAAI,CAAC;MACpB,CAAC,MAAM;QACLG,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEJ,IAAI,CAAC;QAC/CL,YAAY,CAAC,EAAE,CAAC;MAClB;IACF,CAAC,CAAC,CACDU,KAAK,CAAED,KAAK,IAAKD,OAAO,CAACC,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC,CAAC;EACzE,CAAC,EAAE,CAACZ,cAAc,CAAC,CAAC;EAEpB,oBACEH,OAAA,CAACR,SAAS;IAACyB,KAAK,EAAE,GAAI;IAACC,MAAM,EAAE,GAAI;IAACP,IAAI,EAAEN,SAAU;IAAAc,QAAA,gBAClDnB,OAAA,CAACF,aAAa;MAACsB,eAAe,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvCxB,OAAA,CAACN,KAAK;MAAC+B,OAAO,EAAC;IAAW;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC7BxB,OAAA,CAACL,KAAK;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACTxB,OAAA,CAACJ,OAAO;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACXxB,OAAA,CAACH,MAAM;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVxB,OAAA,CAACP,IAAI;MAACiC,IAAI,EAAC,UAAU;MAACD,OAAO,EAAEtB,cAAe;MAACwB,MAAM,EAAC;IAAS;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzD,CAAC;AAEhB,CAAC;AAACpB,EAAA,CA3BIF,cAAc;AAAA0B,EAAA,GAAd1B,cAAc;AA6BpB,eAAeA,cAAc;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}