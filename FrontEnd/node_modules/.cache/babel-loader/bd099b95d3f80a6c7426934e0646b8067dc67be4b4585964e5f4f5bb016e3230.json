{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aj437\\\\Desktop\\\\Projects\\\\Centric\\\\my-app\\\\src\\\\HeatmapComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport heatmap from \"heatmap.js\"; // Import the heatmap.js library\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://localhost:8080/api/data\"; // API URL to fetch data\n\nconst HeatmapComponent = ({\n  startTime,\n  endTime\n}) => {\n  _s();\n  const [heatmapData, setHeatmapData] = useState([]);\n\n  // Fetch heatmap data on component mount or when startTime or endTime changes\n  useEffect(() => {\n    fetch(`${API_URL}/heatmap?startTime=${startTime}&endTime=${endTime}`).then(res => res.json()).then(data => {\n      setHeatmapData(data);\n      createHeatmap(data); // Create heatmap after data is fetched\n    }).catch(error => {\n      console.error(\"Error fetching heatmap data:\", error);\n    });\n  }, [startTime, endTime]);\n\n  // Function to create the heatmap\n  const createHeatmap = data => {\n    // Prepare the points from the data (converting them to the format heatmap.js expects)\n    const points = data.map(point => ({\n      x: point.posX,\n      y: point.posY,\n      value: point.intensity\n    }));\n\n    // Initialize the heatmap instance\n    const heatmapInstance = heatmap.create({\n      container: document.getElementById(\"heatmapContainer\") // Container for heatmap\n    });\n\n    // Set the heatmap data\n    heatmapInstance.setData({\n      max: Math.max(...points.map(p => p.value)),\n      // Calculate max intensity\n      data: points\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Positional Heatmap\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"heatmapContainer\",\n      style: {\n        width: \"100%\",\n        height: \"500px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), \"  \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(HeatmapComponent, \"6rwSeSRUaCbZ8dM87UctXDg9HWc=\");\n_c = HeatmapComponent;\nexport default HeatmapComponent;\nvar _c;\n$RefreshReg$(_c, \"HeatmapComponent\");","map":{"version":3,"names":["React","useEffect","useState","heatmap","jsxDEV","_jsxDEV","API_URL","HeatmapComponent","startTime","endTime","_s","heatmapData","setHeatmapData","fetch","then","res","json","data","createHeatmap","catch","error","console","points","map","point","x","posX","y","posY","value","intensity","heatmapInstance","create","container","document","getElementById","setData","max","Math","p","children","fileName","_jsxFileName","lineNumber","columnNumber","id","style","width","height","_c","$RefreshReg$"],"sources":["C:/Users/aj437/Desktop/Projects/Centric/my-app/src/HeatmapComponent.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport heatmap from \"heatmap.js\";  // Import the heatmap.js library\n\nconst API_URL = \"http://localhost:8080/api/data\";  // API URL to fetch data\n\nconst HeatmapComponent = ({ startTime, endTime }) => {\n  const [heatmapData, setHeatmapData] = useState([]);\n\n  // Fetch heatmap data on component mount or when startTime or endTime changes\n  useEffect(() => {\n    fetch(`${API_URL}/heatmap?startTime=${startTime}&endTime=${endTime}`)\n      .then((res) => res.json())\n      .then((data) => {\n        setHeatmapData(data);\n        createHeatmap(data);  // Create heatmap after data is fetched\n      })\n      .catch((error) => {\n        console.error(\"Error fetching heatmap data:\", error);\n      });\n  }, [startTime, endTime]);\n\n  // Function to create the heatmap\n  const createHeatmap = (data) => {\n    // Prepare the points from the data (converting them to the format heatmap.js expects)\n    const points = data.map((point) => ({\n      x: point.posX,\n      y: point.posY,\n      value: point.intensity,\n    }));\n\n    // Initialize the heatmap instance\n    const heatmapInstance = heatmap.create({\n      container: document.getElementById(\"heatmapContainer\"),  // Container for heatmap\n    });\n\n    // Set the heatmap data\n    heatmapInstance.setData({\n      max: Math.max(...points.map((p) => p.value)),  // Calculate max intensity\n      data: points,\n    });\n  };\n\n  return (\n    <div>\n      <h3>Positional Heatmap</h3>\n      <div id=\"heatmapContainer\" style={{ width: \"100%\", height: \"500px\" }}></div>  {/* Heatmap container */}\n    </div>\n  );\n};\n\nexport default HeatmapComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,YAAY,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,OAAO,GAAG,gCAAgC,CAAC,CAAE;;AAEnD,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC,SAAS;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACnD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;;EAElD;EACAD,SAAS,CAAC,MAAM;IACdY,KAAK,CAAC,GAAGP,OAAO,sBAAsBE,SAAS,YAAYC,OAAO,EAAE,CAAC,CAClEK,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAK;MACdL,cAAc,CAACK,IAAI,CAAC;MACpBC,aAAa,CAACD,IAAI,CAAC,CAAC,CAAE;IACxB,CAAC,CAAC,CACDE,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD,CAAC,CAAC;EACN,CAAC,EAAE,CAACZ,SAAS,EAAEC,OAAO,CAAC,CAAC;;EAExB;EACA,MAAMS,aAAa,GAAID,IAAI,IAAK;IAC9B;IACA,MAAMK,MAAM,GAAGL,IAAI,CAACM,GAAG,CAAEC,KAAK,KAAM;MAClCC,CAAC,EAAED,KAAK,CAACE,IAAI;MACbC,CAAC,EAAEH,KAAK,CAACI,IAAI;MACbC,KAAK,EAAEL,KAAK,CAACM;IACf,CAAC,CAAC,CAAC;;IAEH;IACA,MAAMC,eAAe,GAAG5B,OAAO,CAAC6B,MAAM,CAAC;MACrCC,SAAS,EAAEC,QAAQ,CAACC,cAAc,CAAC,kBAAkB,CAAC,CAAG;IAC3D,CAAC,CAAC;;IAEF;IACAJ,eAAe,CAACK,OAAO,CAAC;MACtBC,GAAG,EAAEC,IAAI,CAACD,GAAG,CAAC,GAAGf,MAAM,CAACC,GAAG,CAAEgB,CAAC,IAAKA,CAAC,CAACV,KAAK,CAAC,CAAC;MAAG;MAC/CZ,IAAI,EAAEK;IACR,CAAC,CAAC;EACJ,CAAC;EAED,oBACEjB,OAAA;IAAAmC,QAAA,gBACEnC,OAAA;MAAAmC,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BvC,OAAA;MAAKwC,EAAE,EAAC,kBAAkB;MAACC,KAAK,EAAE;QAAEC,KAAK,EAAE,MAAM;QAAEC,MAAM,EAAE;MAAQ;IAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,MAAE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3E,CAAC;AAEV,CAAC;AAAClC,EAAA,CA3CIH,gBAAgB;AAAA0C,EAAA,GAAhB1C,gBAAgB;AA6CtB,eAAeA,gBAAgB;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}