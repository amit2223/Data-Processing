{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aj437\\\\Desktop\\\\Projects\\\\Centric\\\\my-app\\\\src\\\\HeatmapComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport h337 from \"heatmap.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Heatmap = ({\n  data\n}) => {\n  _s();\n  useEffect(() => {\n    if (!data || data.length === 0) return;\n    const heatmapContainer = document.getElementById(\"heatmapContainer\");\n    if (!heatmapContainer) return;\n\n    // Create heatmap instance\n    const heatmap = h337.create({\n      container: heatmapContainer,\n      radius: 20,\n      maxOpacity: 0.6,\n      minOpacity: 0.2,\n      blur: 0.75\n    });\n\n    // Convert API data into heatmap format\n    const heatmapData = {\n      max: Math.max(...data.map(d => d.intensity || 1)),\n      data: data.map(d => ({\n        x: d.posX,\n        y: d.posY,\n        value: d.intensity || 1 // Use intensity as heatmap value\n      }))\n    };\n    heatmap.setData(heatmapData);\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"heatmapContainer\",\n    style: {\n      width: \"800px\",\n      height: \"400px\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 10\n  }, this);\n};\n_s(Heatmap, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Heatmap;\nexport default Heatmap;\nvar _c;\n$RefreshReg$(_c, \"Heatmap\");","map":{"version":3,"names":["React","useEffect","h337","jsxDEV","_jsxDEV","Heatmap","data","_s","length","heatmapContainer","document","getElementById","heatmap","create","container","radius","maxOpacity","minOpacity","blur","heatmapData","max","Math","map","d","intensity","x","posX","y","posY","value","setData","id","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/aj437/Desktop/Projects/Centric/my-app/src/HeatmapComponent.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport h337 from \"heatmap.js\";\n\nconst Heatmap = ({ data }) => {\n  useEffect(() => {\n    if (!data || data.length === 0) return;\n\n    const heatmapContainer = document.getElementById(\"heatmapContainer\");\n    if (!heatmapContainer) return;\n\n    // Create heatmap instance\n    const heatmap = h337.create({\n      container: heatmapContainer,\n      radius: 20,\n      maxOpacity: 0.6,\n      minOpacity: 0.2,\n      blur: 0.75,\n    });\n\n    // Convert API data into heatmap format\n    const heatmapData = {\n      max: Math.max(...data.map((d) => d.intensity || 1)),\n      data: data.map((d) => ({\n        x: d.posX,\n        y: d.posY,\n        value: d.intensity || 1, // Use intensity as heatmap value\n      })),\n    };\n\n    heatmap.setData(heatmapData);\n  }, [data]);\n\n  return <div id=\"heatmapContainer\" style={{ width: \"800px\", height: \"400px\" }}></div>;\n};\n\nexport default Heatmap;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,IAAI,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,OAAO,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC5BN,SAAS,CAAC,MAAM;IACd,IAAI,CAACK,IAAI,IAAIA,IAAI,CAACE,MAAM,KAAK,CAAC,EAAE;IAEhC,MAAMC,gBAAgB,GAAGC,QAAQ,CAACC,cAAc,CAAC,kBAAkB,CAAC;IACpE,IAAI,CAACF,gBAAgB,EAAE;;IAEvB;IACA,MAAMG,OAAO,GAAGV,IAAI,CAACW,MAAM,CAAC;MAC1BC,SAAS,EAAEL,gBAAgB;MAC3BM,MAAM,EAAE,EAAE;MACVC,UAAU,EAAE,GAAG;MACfC,UAAU,EAAE,GAAG;MACfC,IAAI,EAAE;IACR,CAAC,CAAC;;IAEF;IACA,MAAMC,WAAW,GAAG;MAClBC,GAAG,EAAEC,IAAI,CAACD,GAAG,CAAC,GAAGd,IAAI,CAACgB,GAAG,CAAEC,CAAC,IAAKA,CAAC,CAACC,SAAS,IAAI,CAAC,CAAC,CAAC;MACnDlB,IAAI,EAAEA,IAAI,CAACgB,GAAG,CAAEC,CAAC,KAAM;QACrBE,CAAC,EAAEF,CAAC,CAACG,IAAI;QACTC,CAAC,EAAEJ,CAAC,CAACK,IAAI;QACTC,KAAK,EAAEN,CAAC,CAACC,SAAS,IAAI,CAAC,CAAE;MAC3B,CAAC,CAAC;IACJ,CAAC;IAEDZ,OAAO,CAACkB,OAAO,CAACX,WAAW,CAAC;EAC9B,CAAC,EAAE,CAACb,IAAI,CAAC,CAAC;EAEV,oBAAOF,OAAA;IAAK2B,EAAE,EAAC,kBAAkB;IAACC,KAAK,EAAE;MAAEC,KAAK,EAAE,OAAO;MAAEC,MAAM,EAAE;IAAQ;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AACtF,CAAC;AAAC/B,EAAA,CA9BIF,OAAO;AAAAkC,EAAA,GAAPlC,OAAO;AAgCb,eAAeA,OAAO;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}