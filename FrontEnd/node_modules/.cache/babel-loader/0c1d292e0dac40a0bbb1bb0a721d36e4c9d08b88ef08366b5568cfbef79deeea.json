{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aj437\\\\Desktop\\\\Projects\\\\Centric\\\\my-app\\\\src\\\\HeatmapComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport heatmap from \"heatmap.js\"; // Import the heatmap.js library\nimport moment from \"moment\"; // Import moment.js for date formatting\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://localhost:8080/api/data\"; // API URL to fetch data\n\nconst HeatmapComponent = () => {\n  _s();\n  const [heatmapData, setHeatmapData] = useState([]); // State for storing heatmap data\n  const [startTime, setStartTime] = useState(null); // State for start time\n  const [endTime, setEndTime] = useState(null); // State for end time\n\n  // Fetch heatmap data on component mount\n  useEffect(() => {\n    fetch(`${API_URL}/heatmap`).then(res => res.json()).then(data => {\n      console.log(\"Fetched Heatmap Data:\", data); // Log the data to check if it's correct\n      setHeatmapData(data);\n      if (data.length > 0) {\n        setStartTime(data[0].timestamp); // Set start time from first timestamp\n        setEndTime(data[data.length - 1].timestamp); // Set end time from last timestamp\n      }\n      createHeatmap(data); // Create the heatmap after data is fetched\n    }).catch(error => {\n      console.error(\"Error fetching heatmap data:\", error);\n    });\n  }, []);\n\n  // Format timestamp to a human-readable format\n  const formatTimestamp = timestamp => {\n    return moment(timestamp).format(\"YYYY-MM-DD HH:mm:ss\");\n  };\n\n  // Function to create the heatmap\n  const createHeatmap = data => {\n    if (!data || data.length === 0) {\n      console.error(\"No heatmap data available!\");\n      return;\n    }\n    const points = data.map(point => ({\n      x: point.posX,\n      // X position\n      y: point.posY,\n      // Y position\n      value: point.intensity // Intensity value (used for heat intensity)\n    }));\n    console.log(\"Points for heatmap:\", points); // Check the points format\n\n    const heatmapInstance = heatmap.create({\n      container: document.getElementById(\"heatmapContainer\"),\n      // Heatmap container element\n      radius: 30,\n      // Heatmap points radius\n      maxOpacity: 0.5,\n      // Maximum opacity of heatmap\n      minOpacity: 0,\n      // Minimum opacity of heatmap\n      blur: 0.85 // Heatmap blur factor\n    });\n\n    // Set the heatmap data (points and max intensity)\n    heatmapInstance.setData({\n      max: Math.max(...points.map(p => p.value)),\n      data: points\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Positional Heatmap\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"heatmapContainer\",\n      style: {\n        width: \"100%\",\n        height: \"500px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Start Time: \", startTime ? formatTimestamp(startTime) : \"Loading...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"End Time: \", endTime ? formatTimestamp(endTime) : \"Loading...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(HeatmapComponent, \"K0R3ITna2kzqophucJodWCcJpkI=\");\n_c = HeatmapComponent;\nexport default HeatmapComponent;\nvar _c;\n$RefreshReg$(_c, \"HeatmapComponent\");","map":{"version":3,"names":["React","useEffect","useState","heatmap","moment","jsxDEV","_jsxDEV","API_URL","HeatmapComponent","_s","heatmapData","setHeatmapData","startTime","setStartTime","endTime","setEndTime","fetch","then","res","json","data","console","log","length","timestamp","createHeatmap","catch","error","formatTimestamp","format","points","map","point","x","posX","y","posY","value","intensity","heatmapInstance","create","container","document","getElementById","radius","maxOpacity","minOpacity","blur","setData","max","Math","p","children","fileName","_jsxFileName","lineNumber","columnNumber","id","style","width","height","_c","$RefreshReg$"],"sources":["C:/Users/aj437/Desktop/Projects/Centric/my-app/src/HeatmapComponent.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport heatmap from \"heatmap.js\"; // Import the heatmap.js library\nimport moment from \"moment\"; // Import moment.js for date formatting\n\nconst API_URL = \"http://localhost:8080/api/data\"; // API URL to fetch data\n\nconst HeatmapComponent = () => {\n  const [heatmapData, setHeatmapData] = useState([]); // State for storing heatmap data\n  const [startTime, setStartTime] = useState(null); // State for start time\n  const [endTime, setEndTime] = useState(null); // State for end time\n\n  // Fetch heatmap data on component mount\n  useEffect(() => {\n    fetch(`${API_URL}/heatmap`)\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(\"Fetched Heatmap Data:\", data); // Log the data to check if it's correct\n        setHeatmapData(data);\n\n        if (data.length > 0) {\n          setStartTime(data[0].timestamp); // Set start time from first timestamp\n          setEndTime(data[data.length - 1].timestamp); // Set end time from last timestamp\n        }\n\n        createHeatmap(data); // Create the heatmap after data is fetched\n      })\n      .catch((error) => {\n        console.error(\"Error fetching heatmap data:\", error);\n      });\n  }, []);\n\n  // Format timestamp to a human-readable format\n  const formatTimestamp = (timestamp) => {\n    return moment(timestamp).format(\"YYYY-MM-DD HH:mm:ss\");\n  };\n\n  // Function to create the heatmap\n  const createHeatmap = (data) => {\n    if (!data || data.length === 0) {\n      console.error(\"No heatmap data available!\");\n      return;\n    }\n\n    const points = data.map((point) => ({\n      x: point.posX,        // X position\n      y: point.posY,        // Y position\n      value: point.intensity // Intensity value (used for heat intensity)\n    }));\n\n    console.log(\"Points for heatmap:\", points); // Check the points format\n\n    const heatmapInstance = heatmap.create({\n      container: document.getElementById(\"heatmapContainer\"), // Heatmap container element\n      radius: 30, // Heatmap points radius\n      maxOpacity: 0.5, // Maximum opacity of heatmap\n      minOpacity: 0, // Minimum opacity of heatmap\n      blur: 0.85, // Heatmap blur factor\n    });\n\n    // Set the heatmap data (points and max intensity)\n    heatmapInstance.setData({\n      max: Math.max(...points.map((p) => p.value)),\n      data: points,\n    });\n  };\n\n  return (\n    <div>\n      <h3>Positional Heatmap</h3>\n\n      {/* Displaying the heatmap */}\n      <div id=\"heatmapContainer\" style={{ width: \"100%\", height: \"500px\" }}></div>\n\n      {/* Displaying the start and end time */}\n      <div>\n        <h4>Start Time: {startTime ? formatTimestamp(startTime) : \"Loading...\"}</h4>\n        <h4>End Time: {endTime ? formatTimestamp(endTime) : \"Loading...\"}</h4>\n      </div>\n    </div>\n  );\n};\n\nexport default HeatmapComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}