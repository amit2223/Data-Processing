{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aj437\\\\Desktop\\\\Projects\\\\Centric\\\\my-app\\\\src\\\\GraphComponent.js\";\nimport React from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GraphComponent = ({\n  data,\n  selectedMetric\n}) => {\n  const formatTime = timestamp => moment(timestamp).format('HH:mm:ss');\n  const getDataForMetric = () => {\n    return data.map(entry => ({\n      timestamp: entry.timestamp,\n      [selectedMetric]: entry[selectedMetric]\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Tracking Graph\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 400,\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        data: getDataForMetric(),\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"timestamp\",\n          tickFormatter: formatTime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: selectedMetric,\n          stroke: \"#8884d8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_c = GraphComponent;\nexport default GraphComponent;\nvar _c;\n$RefreshReg$(_c, \"GraphComponent\");","map":{"version":3,"names":["React","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","moment","jsxDEV","_jsxDEV","GraphComponent","data","selectedMetric","formatTime","timestamp","format","getDataForMetric","map","entry","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","strokeDasharray","dataKey","tickFormatter","type","stroke","_c","$RefreshReg$"],"sources":["C:/Users/aj437/Desktop/Projects/Centric/my-app/src/GraphComponent.js"],"sourcesContent":["import React from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport moment from 'moment';\n\nconst GraphComponent = ({ data, selectedMetric }) => {\n  const formatTime = (timestamp) => moment(timestamp).format('HH:mm:ss');\n\n  const getDataForMetric = () => {\n    return data.map(entry => ({\n      timestamp: entry.timestamp,\n      [selectedMetric]: entry[selectedMetric],\n    }));\n  };\n\n  return (\n    <div>\n      <h2>Tracking Graph</h2>\n      <ResponsiveContainer width=\"100%\" height={400}>\n        <LineChart data={getDataForMetric()}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"timestamp\" tickFormatter={formatTime} />\n          <YAxis />\n          <Tooltip />\n          <Line type=\"monotone\" dataKey={selectedMetric} stroke=\"#8884d8\" />\n        </LineChart>\n      </ResponsiveContainer>\n    </div>\n  );\n};\n\nexport default GraphComponent;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,EAAEC,aAAa,EAAEC,OAAO,EAAEC,mBAAmB,QAAQ,UAAU;AACrG,OAAOC,MAAM,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,cAAc,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAe,CAAC,KAAK;EACnD,MAAMC,UAAU,GAAIC,SAAS,IAAKP,MAAM,CAACO,SAAS,CAAC,CAACC,MAAM,CAAC,UAAU,CAAC;EAEtE,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,OAAOL,IAAI,CAACM,GAAG,CAACC,KAAK,KAAK;MACxBJ,SAAS,EAAEI,KAAK,CAACJ,SAAS;MAC1B,CAACF,cAAc,GAAGM,KAAK,CAACN,cAAc;IACxC,CAAC,CAAC,CAAC;EACL,CAAC;EAED,oBACEH,OAAA;IAAAU,QAAA,gBACEV,OAAA;MAAAU,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBd,OAAA,CAACH,mBAAmB;MAACkB,KAAK,EAAC,MAAM;MAACC,MAAM,EAAE,GAAI;MAAAN,QAAA,eAC5CV,OAAA,CAACT,SAAS;QAACW,IAAI,EAAEK,gBAAgB,CAAC,CAAE;QAAAG,QAAA,gBAClCV,OAAA,CAACL,aAAa;UAACsB,eAAe,EAAC;QAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACvCd,OAAA,CAACP,KAAK;UAACyB,OAAO,EAAC,WAAW;UAACC,aAAa,EAAEf;QAAW;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACxDd,OAAA,CAACN,KAAK;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACTd,OAAA,CAACJ,OAAO;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACXd,OAAA,CAACR,IAAI;UAAC4B,IAAI,EAAC,UAAU;UAACF,OAAO,EAAEf,cAAe;UAACkB,MAAM,EAAC;QAAS;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnB,CAAC;AAEV,CAAC;AAACQ,EAAA,GAxBIrB,cAAc;AA0BpB,eAAeA,cAAc;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}